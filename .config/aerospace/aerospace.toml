# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget borders active_color=0xffffffff inactive_color=0x00494d64 width=5 blacklist="iPhone Mirroring"',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 50

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'
alt-cmd-tab = [
  'move-node-to-monitor --wrap-around next',
  'focus-monitor --wrap-around next',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -200'
alt-shift-equal = 'resize smart +200'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-9 = 'workspace 9'
alt-b = 'workspace B'
alt-d = 'workspace D'
alt-g = [
  'workspace G',
  '''exec-and-forget osascript -e 'tell application "ChatGPT" to activate'''',
]
alt-p = 'workspace P'
alt-q = [
  'workspace Q',
  '''exec-and-forget  osascript -e 'tell application "QQ" to activate'''',
]
alt-r = 'workspace R'
alt-z = 'workspace Z'
alt-0 = 'workspace 0'

alt-ctrl-1 = 'summon-workspace 1'
alt-ctrl-2 = 'summon-workspace 2'
alt-ctrl-3 = 'summon-workspace 3'
alt-ctrl-4 = 'summon-workspace 4'
alt-ctrl-5 = 'summon-workspace 5'
alt-ctrl-6 = 'summon-workspace 6'
alt-ctrl-9 = 'summon-workspace 9'
alt-ctrl-b = 'summon-workspace B'
alt-ctrl-d = 'summon-workspace D'
alt-ctrl-g = 'summon-workspace G'
alt-ctrl-p = 'summon-workspace P'
alt-ctrl-q = 'summon-workspace Q'
alt-ctrl-r = 'summon-workspace R'
alt-ctrl-z = 'summon-workspace Z'
alt-ctrl-0 = 'summon-workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-b = 'move-node-to-workspace B'
alt-shift-d = 'move-node-to-workspace D'
alt-shift-g = 'move-node-to-workspace G'
alt-shift-p = 'move-node-to-workspace P'
alt-shift-q = 'move-node-to-workspace Q'
alt-shift-r = 'move-node-to-workspace R'
alt-shift-z = 'move-node-to-workspace Z'
alt-shift-0 = 'move-node-to-workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = ['move-workspace-to-monitor --wrap-around next']

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
b = ['balance-sizes']
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
m = ['fullscreen', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Terminal
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace 1'

# Browser
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'Mattermost.Desktop'
run = 'move-node-to-workspace 3'

# GTD
[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
run = ['layout floating', 'move-node-to-workspace R']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace R'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'move-node-to-workspace R'

# Presentations
[[on-window-detected]]
if.app-id = 'com.apple.iWork.Keynote'
run = ['layout floating', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace 4'

# Content creation
[[on-window-detected]]
if.app-id = 'com.pixelmatorteam.pixelmator.x'
run = ['layout floating', 'move-node-to-workspace 5']

[[on-window-detected]]
if.app-id = 'com.apple.FinalCut'
run = ['layout floating', 'move-node-to-workspace 5']

[[on-window-detected]]
if.app-id = 'vip.loker.tts-vue'
run = ['layout floating', 'move-node-to-workspace 5']

# Document
[[on-window-detected]]
if.app-id = 'org.zotero.zotero'
run = 'move-node-to-workspace D'

# AI
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace G'

[[on-window-detected]]
if.app-id = 'com.bilibili.bilibiliPC'
run = 'move-node-to-workspace B'

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = ['layout floating', 'move-node-to-workspace B']

# Chat
[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = 'move-node-to-workspace Q'

[[on-window-detected]]
if.app-id = 'com.tencent.qq'
run = 'move-node-to-workspace Q'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace Q'

[[on-window-detected]]
if.app-id = 'com.facebook.archon.developerID'
run = 'move-node-to-workspace Q'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace Q'

# Zoom
[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = 'move-node-to-workspace Z'

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
if.window-title-regex-substring = 'Zoom Workplace'
run = ['layout floating']

# Settings
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating', 'move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'com.titanium.OnyX'
run = ['layout floating', 'move-node-to-workspace P']

# Settings
[[on-window-detected]]
if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = ['layout floating', 'move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'com.stairways.keyboardmaestro.editor'
run = ['layout floating', 'move-node-to-workspace P']

# Terminal: newsboat
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
if.window-title-regex-substring = "newsboat"
run = 'move-node-to-workspace 0'

[[on-window-detected]]
if.app-id = 'NULL-APP-BUNDLE-ID'
if.window-title-regex-substring = "python3"
run = 'move-node-to-workspace 0'

# News
[[on-window-detected]]
if.app-id = 'com.reederapp.5.macOS'
run = 'move-node-to-workspace 0'

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.calibre'
run = 'move-node-to-workspace 0'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
if.window-title-regex-substring = "Personal —.*"
run = 'move-node-to-workspace 0'

[[on-window-detected]]
if.app-id = 'org.m0k.transmission'
run = ['layout floating', 'move-node-to-workspace 0']

[[on-window-detected]]
if.app-id = 'com.charliemonroe.Downie-4'
run = ['layout floating', 'move-node-to-workspace 0']

# Float these apps
[[on-window-detected]]
if.app-id = 'com.example.keyviz'
run = ['layout floating']

[[on-window-detected]]
if.window-title-regex-substring = "Fonts"
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'fr.chachatelier.pierre.LaTeXiT'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.ibearsoft.moneypromac'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'NULL-APP-BUNDLE-ID'
run = ['layout floating']
